left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(Count)
slice(., rep(1:n(), each=count))
})
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(act_id = 1:n()) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant)
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(act_id = 1:n()) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
slice(., rep(1:n(), each=count))
})
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(act_id = 1:n()) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
slice(., rep(1:n(), times=count))
})
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
slice(., rep(1:n(), times=count))
}) %>%
mutate(act_id = 1:n())
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = round(row_number() / length))
}) %>%
mutate(act_id = 1:n())
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = round(row_number() + 1 / length))
}) %>%
mutate(act_id = 1:n())
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() + 1 / length))
}) %>%
mutate(act_id = 1:n())
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
mutate(act_id = 1:n())
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case))
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"))
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "")
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog()
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "")
}
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecycle = "complete")
}
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
dfg_private
patients
process_map(dfg_private)
process_map(patients)
process_map(dfg_private)
View(dfg_private)
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(2:(n()-1)) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
View(dfg_private)
View(dfg_private)
convert_traces <- function(csv, activity_lookup) {
browser()
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(2:(n()-1)) %>%
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(2:(n()-1))
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant)
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(c(-1,-n()))
convert_traces <- function(csv, activity_lookup) {
browser()
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(c(-1,-n())) %>% # remove artifical start/end
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
dfg_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(c(-1,-n())) %>% # remove artifical start/end
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
View(dfg_private)
process_map(dfg_private)
library(readr)
source("heuristic_miner.R")
source("prom_utils.R")
library(DiagrammeRsvg)
library(stringr)
convert_precedence <- function(csv) {
csv %>%
select(antecedent = Source,
consequent = Target,
n = Count) %>%
filter(n > 0) %>%
filter(antecedent != "End",
consequent != "Start") # filter obvious nonsense
}
convert_traces <- function(csv, activity_lookup) {
csv %>%
mutate(variant = 1:n()) %>%
mutate(Sequence = as.character(Sequence)) %>%
mutate(Sequence = sapply(str_split(as.character(Sequence), pattern = ""), paste, collapse = ",")) %>%
separate_rows(Sequence, sep = ",") %>%
rename("Id" = Sequence) %>%
mutate(Id = as.integer(Id)) %>%
left_join(activity_lookup, by = c("Id" = "Id")) %>%
group_by(variant) %>%
slice(c(-1,-n())) %>% # remove artifical start/end
do({
count <- max(.$Count)
length <- nrow(.)
slice(., rep(1:n(), times=count)) %>%
mutate(case = ceiling(row_number() / length))
}) %>%
ungroup() %>%
mutate(act_id = 1:n(),
case = paste0(variant,"-",case)) %>%
mutate(timestamp = as.POSIXct(act_id, origin = "1970-01-01"),
resource = "",
lifecyle = "complete")
}
x <- 1
dep_threshold <- .9
obs_threshold <- .05
epsilon <- .1
log_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
write_xes(log_private, paste("log-private",x,"xes"))
log_private %>%
precedence_matrix() %>%
filter(n > obs_threshold * max(n)) %>%
dependency_matrix() %>%
filter(dep > dep_threshold) %>%
dependency_graph(render = F) %>%
export_graph(paste0("private",x, ".pdf"))
write_xes(patients, "log-original.xes")
lapply(c(1:5), function(x) {
dep_threshold <- .9
obs_threshold <- .05
epsilon <- .1
log_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
write_xes(log_private, paste("variants-private",x,"xes"))
log_private %>%
precedence_matrix() %>%
filter(n > obs_threshold * max(n)) %>%
dependency_matrix() %>%
filter(dep > dep_threshold) %>%
dependency_graph(render = F) %>%
export_graph(paste0("variants-private",x, ".pdf"))
log_original <- read_xes("log-original.xes")
log_original %>%
filter(antecedent != "End", consequent != "Start") %>%
filter(n > obs_threshold * max(n)) %>%
dependency_matrix() %>%
filter(dep > dep_threshold) %>%
dependency_graph(render = F) %>%
export_graph(paste0("variants-original",x, ".pdf"))
})
log_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
log_private
process_map(log_private)
process_map(log_private %>% filter_activity_frequency(percentage = 0.9))
process_map(log_private %>% filter_activity_frequency(percentage = 0.8))
process_map(log_private %>% filter_activity_frequency(percentage = 0.5))
process_map(log_private %>% filter_trace_frequency(percentage = 0.5))
process_map(log_private %>% filter_trace_frequency(percentage = 0.8))
process_map(log_private %>% filter_trace_frequency(percentage = 0.7))
dep_threshold <- .9
obs_threshold <- .05
epsilon <- .1
sequence_threshold <- 25
sequence_length <- 15
log_private <- read_csv(url(paste0("http://localhost:1234/traces?epsilon=", epsilon, "&sequence_threshold=", sequence_threshold, "&sequence_length=", sequence_length ))) %>%
convert_traces(read_csv("log-activities.csv")) %>%
eventlog(case_id = "case", activity_id = "Activity", activity_instance_id = "act_id",
lifecycle_id = "lifecyle", timestamp = "timestamp", resource_id = "resource")
View(log_private)
process_map(log_private %>% filter_trace_frequency(percentage = 0.7))
process_map(log_private %>% filter_trace_frequency(percentage = 0.9))
process_map(log_private %>% filter_trace_frequency(percentage = 0.8))
